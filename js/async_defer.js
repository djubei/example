// deffer - отложенная загрузка скрипта сохраняет заданый порядок выполнения скриптов ,но загрузка происходит параллельно
// если указан async/defer то приоритет будет у async,в начале загружается DOM потом скрипт с дефер потом DOMContentLoaded{}
// в стандартной загрузке html в начале загружается html пока не дойдет до тега скрипт это прерывает загрузку html
// до того момента пока не выполнится скрипт а потом продолжится загрузка html
// обычный скрипт как и скрипт с defer сохраняет порядок
//async скрипт начинает выполняться как только загрузится не зависимо от последовательности
//Атрибут defer предназначен только для внешних скриптов
// Атрибут defer будет проигнорирован, если в теге <script> нет src.
//Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга и простые скрипты не ждут async и наоборот
// async когда загрузятся, то сразу же выполняются, а значит блокируют парсинг html



function addScript(src) {
  let script = document.createElement('script');
  script.type = "text/javascript";
  script.src = src;
  script.async = false; // чтобы гарантировать порядок
  document.body.appendChild(script);
}


addScript('./js/1.js'); // загружаться эти скрипты начнут сразу
addScript('./js/2.js'); // выполнятся, как только загрузятся
addScript('./js/3.js'); // но, гарантированно, в порядке 1 -> 2 -> 3

